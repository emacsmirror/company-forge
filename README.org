#+STARTUP: showeverything
#+STARTUP: literallinks
#+OPTIONS: toc:nil num:nil author:nil
* company-forge.el - Company backend for assignees and topics from forge
:PROPERTIES:
:CUSTOM_ID: company-forge.el---company-backend-for-assignees-and-topics-from-forge
:END:
[[https://melpa.org/#/company-forge][https://melpa.org/packages/company-forge-badge.svg]]
[[https://github.com/pkryger/company-forge.el/actions/workflows/test.yml][https://github.com/pkryger/company-forge.el/actions/workflows/test.yml/badge.svg]]
[[https://coveralls.io/github/pkryger/company-forge.el?branch=main][https://coveralls.io/repos/github/pkryger/company-forge.el/badge.svg?branch=main]]

** Description
:PROPERTIES:
:CUSTOM_ID: description
:END:
The =company-forge= is a
[[https://github.com/company-mode/company-mode][company-mode]] completion
backend for [[https://github.com/magit/forge][forge]].  It uses current =forge=
repository data to offer completions for assignees (~@~ mentions of users and
teams) and topics (~#~ references to issues and pull requests).

** Features
:PROPERTIES:
:CUSTOM_ID: features
:END:
- Offer completion after entering ~@~ and ~#~
- Support for users, teams, issues, and pull requests.
- Suppoet for different matching types (see =company-forge-match-type=).
- Display [[https://github.com/primer/octicons][octicons]] for candidates (see
  ~company-forge-icons-mode~).
- Display issues and pull-request text as a documentation with
  =quickhelp-string= and =doc-buffer= =company= commands.

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:
*** Installing from MELPA
:PROPERTIES:
:CUSTOM_ID: installing-from-melpa
:END:
The easiest way to install and keep =company-forge= up-to-date is using Emacs'
built-in package manager.  =company-forge= is available in the MELPA
repository.  Refer to https://melpa.org/#/getting-started for how to install a
package from MELPA.

Please see [[#configuration][Configuration]] section for example configuration.

You can use any of the package managers that supports installation from MELPA.
It can be one of (but not limited to): one of the built-in =package=,
=use-package=, or any other package manger that handles autoloads generation,
for example (in alphabetical order)
[[https://github.com/emacscollective/borg][Borg]],
[[https://github.com/progfolio/elpaca][Elpaca]],
[[https://github.com/quelpa/quelpa][Quelpa]], or
[[https://github.com/radian-software/straight.el][straight.el]].


*** Installing from GitHub
:PROPERTIES:
:CUSTOM_ID: installing-from-github
:END:
The preferred method is to use built-in =use-package=.  Add the following to
your Emacs configuration file (usually =~/.emacs= or =~/.emacs.d/init.el=):

#+begin_src emacs-lisp :results value silent
(use-package company-forge
  :vc (:url "https://github.com/pkryger/company-forge.el.git"
       :rev :newest)))
#+end_src

Please refer to [[#configuration][Configuration]] section for example configuration.

** Configuration
:PROPERTIES:
:CUSTOM_ID: configuration
:END:
This section assumes you have =company-forge='s autoloads set up at Emacs startup.
If you have installed =company-forge= using built-in =package= or =use-package=
then you should be all set.

#+begin_src emacs-lisp :results value silent
(use-package company-forge
  :after (company forge)
  :config
  (company-forge-icons-mode) ;; Display icons
  (advice-add #'forge--pull ;; Reset cache after forge pull
              :filter-args #'company-forge-reset-cache-after-pull)
  (add-to-list 'company-backends 'company-forge))
#+end_src

** Customization
:PROPERTIES:
:CUSTOM_ID: customization
:END:
Below is a list of configuration options and optional functions with their
synopses that can be used to customize =company-forge= behavior.  Please refer
to documentation of respective symbol for more details.

- user option: =company-forge-match-type=: define how to match candidates
- user option: =company-forge-predicate=: a buffer predicate to control if the backend is enabled
- user option: =company-forge-use-cache=: control whether cache is used for candidates retrieval
- minor mode: =comany-forge-icons-mode=: control whether to display icons for candidates
- function: =company-forge-reset-cache-after-pull=: designed as a =:filter-args= advice for =forge--pull=

** Contributing
:PROPERTIES:
:CUSTOM_ID: contributing
:END:
Contributions are welcome! Feel free to submit issues and pull requests on the
[[https://github.com/pkryger/company-forge.el][GitHub repository]].

*** Testing
:PROPERTIES:
:CUSTOM_ID: testing
:END:
When creating a pull request make sure all tests in
[[file:test/company-forge.t.el]] are passing.  When adding a new functionality,
please strive to add tests for it as well.

To run tests:
- open the [[file:test/company-forge.t.el]]
- type ~M-x eval-buffer <RET>~
- type ~M-x ert <RET> t <RET>~

*** Documentation autoring
:PROPERTIES:
:CUSTOM_ID: documentation-authoring
:END:
This package uses
[[https://github.com/pkryger/org-commentary.el][org-commentary.el]] (different
from the one available on MELPA!) to generate and validate commentary section
in =company-forge.el=.  Please see the package documentation for usage
instructions.

** License                                                         :noexport:
:PROPERTIES:
:CUSTOM_ID: license
:END:
This package is licensed under the
[[https://github.com/pkryger/company-forge.el?tab=readme-ov-file#MIT-1-ov-file][MIT License]].

--------------

Happy coding! If you encounter any issues or have suggestions for improvements,
please don't hesitate to reach out on the
[[https://github.com/pkryger/company-forge.el][GitHub repository]].  Your feedback
is highly appreciated.

# LocalWords: MELPA DWIM
